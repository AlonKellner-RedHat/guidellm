name: UI Release Candidate

on:
  push:
    branches:
      - "release/*"
  workflow_dispatch:

jobs:
  unit-tests:
    permissions:
      contents: "read"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci
        working-directory: ui

      - name: Run unit tests
        run: make test-unit
        working-directory: ui

  integration-tests:
    permissions:
      contents: "read"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci
        working-directory: ui

      - name: Run integration tests
        run: make test-integration
        working-directory: ui

  e2e-tests:
    # Permissions needed to get ID token for OIDC auth
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci
        working-directory: ui

      - name: Generate Build
        run: |
          npm run build
        working-directory: ui

      - name: Start the Next.js app
        run: |
          npx serve@latest out &
          npx wait-on http://localhost:3000  # Wait until the app is ready
        working-directory: ui

      - name: Run Cypress tests
        run: npx cypress run --headless
        working-directory: ui

  publish-versioned-build-gh-pages:
    needs: [quality-check, precommit-check, unit-tests, integration-tests]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci
        working-directory: ui

      - name: "Set GIT_TAG"
        id: vars
        run: |
          if [ -z "${{ github.ref_name }}" ]; then
            echo "TAG=latest" >> $GITHUB_ENV
          else
            echo "TAG=${{ github.ref_name }}" >> $GITHUB_ENV
          fi

      - name: Build app to root
        id: build
        run: |
          # Export vars to ensure they are loaded before build
          export $(grep -v '^#' .env.staging | xargs)

          # Set asset prefix and base path with git tag
          ASSET_PREFIX=https://neuralmagic.github.io/guidellm/ui/release/${TAG}
          BASE_PATH=/ui/release/${TAG}
          GIT_SHA=${{ github.sha }}
          export ASSET_PREFIX=${ASSET_PREFIX}
          export BASE_PATH=${BASE_PATH}
          export GIT_SHA=${GIT_SHA}
          npm run build
        working-directory: ui

      - name: Deploy versioned build to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
          destination_dir: ui/release/${TAG}
          keep_files: false
          user_name: ${{ github.actor }}
          user_email: ${{ github.actor }}@users.noreply.github.com
          publish_branch: gh-pages

  publish-latest-build-gh-pages:
    needs: [publish-versioned-build-gh-pages]
    permissions:
      contents: write
      pull-requests: write
      issues: write
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci
        working-directory: ui

      - name: "Set GIT_TAG"
        id: vars
        run: |
          if [ -z "${{ github.ref_name }}" ]; then
            echo "TAG=latest" >> $GITHUB_ENV
          else
            echo "TAG=${{ github.ref_name }}" >> $GITHUB_ENV
          fi

      - name: Build app to root
        id: build
        run: |
          # Export vars to ensure they are loaded before build
          export $(grep -v '^#' .env.development | xargs)

          # Set asset prefix and base path with git tag
          ASSET_PREFIX=https://neuralmagic.github.io/guidellm/release/latest
          BASE_PATH=/release/latest
          GIT_SHA=${{ github.sha }}
          export ASSET_PREFIX=${ASSET_PREFIX}
          export BASE_PATH=${BASE_PATH}
          export GIT_SHA=${GIT_SHA}
          npm run build
        working-directory: ui

      - name: Update latest build in GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
          destination_dir: ui/release/latest
          keep_files: false
          user_name: ${{ github.actor }}
          user_email: ${{ github.actor }}@users.noreply.github.com
          publish_branch: gh-pages
