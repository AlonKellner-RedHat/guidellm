{
  "env": {
    "browser": true,
    "es6": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "next",
    "next/core-web-vitals",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "ignorePatterns": [".vscode", "jest.config.js"],
  "overrides": [
    {
      "files": ["*.mjs"],
      "parser": "espree", // Use the default JavaScript parser for `.mjs` files
      "parserOptions": {
        "sourceType": "module"
      }
    }
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "project": "./tsconfig.json",
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "import", "jest", "no-secrets", "react"],
  "root": true,
  "rules": {
    "complexity": ["warn", { "max": 8 }],
    "curly": ["error", "all"],
    "import/order": [
      "error",
      {
        "groups": [
          ["builtin", "external"],
          ["internal", "parent", "sibling", "index"]
        ],
        "newlines-between": "always-and-inside-groups",
        "pathGroups": [
          {
            "pattern": "{@,assets,classes,components,hooks,pages,store,tests,types,utils}/**",
            "group": "internal",
            "position": "before"
          },
          {
            "pattern": "{.,..}/**",
            "group": "internal",
            "position": "after"
          }
        ],
        "pathGroupsExcludedImportTypes": ["builtin"],
        "alphabetize": { "order": "asc", "caseInsensitive": true }
      }
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.test.ts",
          "**/*.test.tsx",
          "**/*.d.ts",
          "**/*.interfaces.ts",
          "**/*.setup.ts",
          "**/*.config.js",
          "**/*.config.mjs"
        ],
        "optionalDependencies": false,
        "peerDependencies": false
      }
    ],
    "no-secrets/no-secrets": ["error", { "additionalRegexes": {}, "ignoreContent": [] }],
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn", // or "error"
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ]
  }
}
